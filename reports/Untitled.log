Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from ipywidgets import widgets
import matplotlib.pyplot as plt 
import math
import numpy as np
from scipy.stats import norm

# Create the output widget
out2 = widgets.HTMLMath()

@widgets.interact(mu0=(-10, 10, 0.1), mu1=(-10, 10, 0.1), sigma2=(0.1, 50, 0.1), r=(-20, 20, 0.1))
def decision_with_one_sample(mu0=0, mu1=5, sigma2=1, r=0):

    limits = [-20, 20, 0, 0.5]
    sigma = math.sqrt(sigma2)
    x = np.linspace(limits[0], limits[1], 1000)
    w0 = norm(loc=mu0, scale=sigma)
    w1 = norm(loc=mu1, scale=sigma)

   
    # Prepare figure
    fig, ax = plt.subplots(figsize=(6,4), dpi = 100)
    #ax.axis(limits)
    
    # Plot density functions and centers
    ax.plot(x, w0.pdf(x))
    ax.plot(x, w1.pdf(x))
    #ax.plot(mu1, 0, 'o')
    #ax.plot(mu2, 0, 'o')
    
    # Plot sample and vertical lines
    eps = 0.1
    ax.vlines(r-eps, 0, w0.pdf(r-eps), colors='b')
    ax.vlines(r+eps, 0, w1.pdf(r+eps), colors='r')
    ax.plot(r, 0, 'o')
       
    plt.show()

    # Display decision
    with out:
        print(r'$$\frac{1}{2}Output:\n   Probability $$')
        
    lr = w1.pdf(r) / w0.pdf(r)
    text = r"Likelihood ratio: $$\frac{{w(r|H_1)}}{{w(r|H_0)}} = \frac{{ {:.2f} }}{{ {:.2f} }} = {:.2f} \Rightarrow$$ Decision $$D_{}$$".format(w1.pdf(r), w0.pdf(r), lr, 1 if lr >= 1 else 0)
    out2.value = text

# Display the outout widget
out2
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
[0;32m/tmp/ipykernel_1687/928050795.py[0m in [0;36m<module>[0;34m[0m
[1;32m      3[0m [0;32mimport[0m [0mmath[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 5[0;31m [0;32mfrom[0m [0mscipy[0m[0;34m.[0m[0mstats[0m [0;32mimport[0m [0mnorm[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      6[0m [0;34m[0m[0m
[1;32m      7[0m [0;31m# Create the output widget[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;31mModuleNotFoundError[0m: No module named 'scipy'
ModuleNotFoundError: No module named 'scipy'

